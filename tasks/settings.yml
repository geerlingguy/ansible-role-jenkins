---
- name: Check if jenkins_init_folder exists.
  stat:
    path: "{{ jenkins_init_folder }}"
  register: jenkins_init_folder_stat

- name: Ensure jenkins_init_folder exists.
  file:
    path: "{{ jenkins_init_folder }}"
    state: directory
    mode: 0644
  when: not jenkins_init_folder_stat.stat.exists

- name: Check if jenkins_init_file exists.
  stat:
    path: "{{ jenkins_init_file }}"
  register: jenkins_init_file_stat

- name: Ensure jenkins_init_file exists.
  file:
    path: "{{ jenkins_init_file }}"
    state: touch
    mode: 0644
  when: not jenkins_init_file_stat.stat.exists

- name: Populate jenkins_init_file with service tag.
  copy:
    dest: "{{ jenkins_init_file }}"
    content: "[Service]"
  when: not jenkins_init_file_stat.stat.exists

- name: Modify variables in init file.
  lineinfile:
    dest: "{{ jenkins_init_file }}"
    insertafter: '^Environment="{{ item.option }}='
    regexp: '^Environment="{{ item.option }} '
    line: 'Environment="{{ item.option }}={{ item.value }}"'
    state: present
    mode: 0644
  with_items: "{{ jenkins_init_changes }}"
  register: jenkins_init_prefix

- name: Ensure jenkins_home {{ jenkins_home }} exists.
  file:
    path: "{{ jenkins_home }}"
    state: directory
    owner: jenkins
    group: jenkins
    mode: u+rwx
    follow: true

- name: Set the Jenkins home directory.
  lineinfile:
    dest: "{{ jenkins_init_file }}"
    regexp: '^JENKINS_HOME=.*'
    line: 'JENKINS_HOME={{ jenkins_home }}'
    mode: 0644
  register: jenkins_home_config

- name: Copy HTTPS files to Jenkins controller
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    mode: "{{ item.mode }}"
    decrypt: "{{ item.decrypt }}"
    owner: "{{ jenkins_process_user }}"
    group: "{{ jenkins_process_group }}"
  with_items: "{{ jenkins_https_files }}"
  register: jenkins_https_files_config
  when: jenkins_https_port != -1

- name: Generate Jenkins HTTPS keystore
  command:
    cmd: >
      openssl pkcs12 -inkey {{ jenkins_home }}/secrets/{{ jenkins_https_key | basename }}
      -in {{ jenkins_home }}/secrets/{{ jenkins_https_crt | basename }}
      -export -out {{ jenkins_home }}/secrets/jenkins-https-keystore.p7b
      -password pass:{{ jenkins_keystore_pass }}
  when: jenkins_https_port != -1 and jenkins_https_files_config.changed

- name: Chown the keystore to the jenkins user
  file:
    path: "{{ jenkins_home }}/secrets/jenkins-https-keystore.p7b"
    owner: "{{ jenkins_process_user }}"
    group: "{{ jenkins_process_group }}"
    mode: 0400
  when: jenkins_https_port != -1 and jenkins_https_files_config.changed

- name: Modify https variables in init file.
  lineinfile:
    dest: "{{ jenkins_init_file }}"
    insertafter: '^Environment="{{ item.option }}='
    regexp: '^Environment="{{ item.option }} '
    line: 'Environment="{{ item.option }}={{ item.value }}"'
    state: present
    mode: 0644
  with_items: "{{ jenkins_init_https_changes }}"
  when: jenkins_https_port != -1
  register: jenkins_init_https_config

- name: Create custom init scripts directory.
  file:
    path: "{{ jenkins_home }}/init.groovy.d"
    state: directory
    owner: "{{ jenkins_process_user }}"
    group: "{{ jenkins_process_group }}"
    mode: 0775

- name: Configure proxy config for Jenkins
  template:
    src: proxy.xml
    dest: "{{ jenkins_home }}/proxy.xml"
    owner: "{{ jenkins_process_user }}"
    group: "{{ jenkins_process_group }}"
    mode: 0664
  register: jenkins_proxy_config
  when:
    - jenkins_proxy_host | length > 0
    - jenkins_proxy_port | length > 0

- name: Trigger handlers immediately in case Jenkins was installed
  meta: flush_handlers

- name: Immediately restart Jenkins on http or user changes.
  service: name=jenkins state=restarted
  when: >
    (jenkins_users_config is defined and jenkins_users_config.changed)
    or (jenkins_init_config is defined and jenkins_init_config.changed)
    or (jenkins_init_https_config is defined and jenkins_init_https_config.changed)
    or (jenkins_https_files_config is defined and jenkins_https_files_config.changed)
    or (jenkins_home_config is defined and jenkins_home_config.changed)
    or (jenkins_proxy_config is defined and jenkins_proxy_config.changed)
  tags: ['skip_ansible_lint']
